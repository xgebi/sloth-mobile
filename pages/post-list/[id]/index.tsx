import styles from './login.page.module.css';
import Head from 'next/head'
import {inject, observer} from "mobx-react";
import React, { useEffect } from "react";
import PageProps from "../../PageProps";
import Navigation from "../../../components/navigation";
import RootStore from "../../../store/RootStore";
import UserStore from "../../../store/UserStore";
import PostStore from "../../../store/PostStore";
import useLoginRedirectEffect from "../../../effects/LoginRedirect.effect";
import {useRouter} from "next/router";
import PostType from "../../../services/interfaces/PostTypesData";
import PostService from "../../../services/post.service";
import PostListData from "../../../services/interfaces/PostListData";
import dateFormatter from "../../../utilities/dateFormatter";
import Link from 'next/link';


const Login: any = inject("rootStore")(
  observer((props: PageProps) => {
    const rootStore: RootStore = props.rootStore!;
    const userStore: UserStore = props.rootStore?.userStore!;
    const postStore: PostStore = props.rootStore?.postStore!;
    const router = useRouter();
    useEffect(() => useLoginRedirectEffect(userStore.isLoggedIn, router));
    const id = router.query.id as string;
    const postType: PostType = postStore.postTypes.filter(pt => pt.uuid === id).pop() as PostType;
    const createTableContents = async () => {
      const postList: PostListData[] = await PostService.getPostsList(userStore.token, postType.uuid, "");
      const res = [];
      for (const item of postList) {
        res.push(
          <tr>
            <td>{item.title}</td>
            <td>{item.status}</td>
            <td>{dateFormatter(item.updateDate)}</td>
            <td>{dateFormatter(item.publishDate)}</td>
            <td>
              <Link href={`/post/${item.uuid}`}>
                Edit
              </Link>
            </td>
          </tr>
        )
      }
      return res;
    }

    return (
      <div className={'page-style'}>
        <Head>
          <title>List of {postType.displayName} | { props.rootStore?.title }</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <style jsx>{`
        
      `}</style>

        <Navigation
          permissionsLevel={userStore.user.permissionsLevel!}
          postTypes={postStore.postTypes}
          activePage={id}
        />
        <main>
          <h1>List of {postType.displayName}</h1>
          <table>
            <thead>
            <tr>
              <th>Title</th>
              <th>Status</th>
              <th>Update Date</th>
              <th>Published Date</th>
              <th>Action</th>
            </tr>
            </thead>
            <tbody>
            </tbody>
          </table>
        </main>
      </div>
    );
  })
);

export default Login;