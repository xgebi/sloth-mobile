import styles from './login.page.module.css';
import Head from 'next/head'
import {inject, observer} from "mobx-react";
import React from "react";
import PageProps from "../../../services/interfaces/PageProps";
import loginRedirect from "../../../effects/LoginRedirect.effect";
import Navigation from "../../../components/navigation";
import {withRouter} from "next/router";

type PostType = {
  uuid: string,
}

type PostState = {
  loading: boolean,
  postType: PostType
}

@inject('rootStore', 'userStore', 'postStore')
@observer
class PostPage extends React.Component<PageProps> {
  state: PostState = {
    loading: true,
    postType: {
      uuid: "",
    },
  };

  async startLoading() {
    this.setState({...this.state, loading: true});
  }

  async loadData() {
    await this.props.postStore?.populatePost(this.props.router.query.id as string);
    this.setState({
      ...this.state,
      loading: false,
    });
  }

  async componentDidMount() {
    loginRedirect(this.props.userStore?.isLoggedIn!, this.props.router);
    this.props.router.events.on("routeChangeStart", this.startLoading.bind(this))
    this.props.router.events.on("routeChangeComplete", this.loadData.bind(this));
  }

  componentWillUnmount() {
    this.props.postStore?.depopulatePost();
    this.props.router.events.off("routeChangeStart", this.startLoading.bind(this))
    this.props.router.events.off("routeChangeComplete", this.loadData.bind(this));
  }

  render() {
    return (
      <div className={'page-style'}>
        <Head>
          <title>Post | { this.props.rootStore?.title }</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <style jsx>{`
        
        `}</style>

        <Navigation
          permissionsLevel={this.props.userStore?.user.permissionsLevel!}
          postTypes={this.props.postStore?.postTypes!}
          activePage={this.state.postType.uuid}
          rootStore={this.props.rootStore!}
        />

        <main>
          <h1>Edit post</h1>
        </main>
      </div>
    );
  }
}

export default withRouter(PostPage);